# generated by fivmc/c1 v0.9.1-rexported (c) 2009, 2010, 2011, 2012, 2013, 2014 Fiji Systems Inc., All Rights Reserved
{
    App = {
        CONTAINS_UNSAFE = {};
        NOT_VERIFIABLE = {
            "Ltest/HelloArray;/main([Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ltest/Kaymar;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ltest/Kaymar;/getElement()I" = (
                "using full optimizing compiler"
            );
        };
        VERIFIABLE = ();
    };
    Root = {
        CONTAINS_UNSAFE = {};
        NOT_VERIFIABLE = {
            "L__vm/FCMagic;/allContiguous()Z" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/copy(fff)V" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/copyFromByteArray([BIIf)V" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/copyToByteArray([BIIf)V" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/fromInt(I)f" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/isContiguous(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/plus(ff)f" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/readByte(f)B" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/writeByte(fB)V" = (
                "using full optimizing compiler"
            );
            "L__vm/FCMagic;/zero()f" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/CharArrayAppendAdapter;/<init>([CI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/CharArrayAppendAdapter;/append(C)Ljava/lang/Appendable;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/CharArrayAppendAdapter;/append(Ljava/lang/CharSequence;)Ljava/lang/Appendable;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/CharArrayAppendAdapter;/append(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/CharArrayAppendAdapter;/position()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/JNIUtils;/jniEscape(Ljava/lang/Appendable;Ljava/lang/String;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/JNIUtils;/toHexDigit(I)C" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/Time;/fivmr_ThreadState_sleepAbsolute(PJ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/Time;/fivmr_curTime()J" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/Time;/nanoTime()J" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/Time;/sleepAbsolute(J)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/align(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/alignCoeff(PPP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/alignRaw(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/arrayLengthOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/arrayPayloadOffset(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/gcHeaderSize()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/objectGCOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/objectSpace()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/objectTDOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/pointerSize()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/stackAllocSpace()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/tdHeaderSize()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/om/OMData;/totalHeaderSize()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/AppClassLoader;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/AppClassLoader;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/callSlowSafeArrayCopy(Ljava/lang/Object;ILjava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/callSlowSafeObjectArrayCopy([Ljava/lang/Object;I[Ljava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([B)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([C)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([D)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([F)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([J)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([P)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([S)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayClone([Z)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayCloneImpl(Ljava/lang/Object;Ljava/lang/Object;P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayCopy(Ljava/lang/Object;ILjava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayCopyWithBarrierImpl([Ljava/lang/Object;I[Ljava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/fastUnsafeArrayCopyWithBarrierNoPollcheckImpl([Ljava/lang/Object;I[Ljava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/slowSafeArrayCopy(Ljava/lang/Object;ILjava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/slowSafeArrayCopy([BI[BII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/slowSafeArrayCopy([II[III)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/slowSafeArrayCopy([JI[JII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/slowSafeArrayCopy([SI[SII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/slowSafeObjectArrayCopy([Ljava/lang/Object;I[Ljava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ArrayHelper;/throwIndexOutOfBoundsException()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/DebugAndProfile;/fivmr_AllThreadStackTraces_free(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/DebugAndProfile;/fivmr_AllThreadStackTraces_get(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/DebugAndProfile;/getAllThreadStackTraces()Ljava/util/List;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerProcessor;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerProcessor;/processAllAvailable()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerProcessor;/processNextBatchAndLog(Z)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerProcessor;/processOneObject(Z)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerProcessor;/reset()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerThread;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerThread;/run()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/FinalizerThread;/startFinalizerThread()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/addDestructor(ILjava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/addressOfElement(Ljava/lang/Object;IP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/alloc(IP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/alloc(IPPPP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocArray(IPI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocArray(IPPIP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocArrayForNative(IPI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocArraySlow(IPI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocArraySlowImpl(IPIPP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocArraySlowImpl(IPIPPZ)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocDestructorSlow(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocForNative(IP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/allocSlow(IP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/arrayAlignmentOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/arrayLength(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/assertMarked(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/canonicalizeScope(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/computeArrayPayloadSize(IIP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/computeArraySize(IIP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/computeArraySizeWithPayloadSize(IPP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/contiguousArray(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/destructorSize()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/gcHeader(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/getAlloc(I)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/getGC()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/getGCData()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/getGCforVM(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/getInvCurShaded()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/hashCode(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/inHeapCheck(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/indexableStartOfArray(Ljava/lang/Object;P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/indexableStartOfArray([B)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/logRequiredObjectAlignment()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/mark(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/markBitsShift()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/maxArrayLength(IP)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/multianewarray(PIP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/objectAlignmentOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/objectHeader(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/objectPayloadOffset()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/readObjectHeader(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/requiredSizeAlignment()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/scopeStoreCheck(Ljava/lang/Object;Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/shouldMark(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/shouldMark(Ljava/lang/Object;P)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/stampArray(PIPPIP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/stampGCBits(IPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/stampObjHeader(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/stampObject(PIPPP)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/storeBarrier(Ljava/lang/Object;PLjava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/throwNASE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/throwOOME()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MM;/throwOOMEOrNASE(I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Magic;/getPayload()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Magic;/getSettings()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Magic;/getVM()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Magic;/id(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Magic;/topCast(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/MemoryArea_doRun(PLjava/lang/Runnable;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/allocScopeBacking(PJ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/areaOf(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/fivmr_MemoryArea_getHeapArea(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/fivmr_MemoryArea_getImmortalArea(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/fivmr_MemoryArea_getStackArea(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/fivmr_MemoryArea_setCurrentArea(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/fivmr_ScopeBacking_alloc(PJ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/getHeapArea()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/getImmortalArea()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/getJavaArea(P)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/getStackArea()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MemoryAreas;/setCurrentArea(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Monitors;/lock(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Monitors;/lockSlow(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Monitors;/notHeld()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Monitors;/unbiased()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Monitors;/unlock(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/Monitors;/unlockSlow(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/compareTo(Lcom/fiji/fivm/r1/MutableInt;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/setValue(I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/MutableInt;/value()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/PointerBox;/<init>(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/PointerBox;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/PointerBox;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/PointerBox;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/PointerBox;/value()P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread$1;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread$1;/compare(Ljava/lang/Object;Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread$1;/compare(Ljava/util/Map$Entry;Ljava/util/Map$Entry;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread$2;/<init>(Lcom/fiji/fivm/r1/ProfilerThread;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread$2;/run()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread;/run()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread;/sort(Ljava/util/Map;)Ljava/util/ArrayList;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ProfilerThread;/startProfiler()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ReflectiveException;/<init>(Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/StackTraceFrame;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/StackTraceFrame;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/StackTraceFrame;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/StackTraceFrame;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/ThreadStackTrace;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmError;/<init>(Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmOptions;/forceSafeRefArrayCopy()Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime$DumpStackCback;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime$DumpStackCback;/DumpStackCback_cback(PI)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/abort(Ljava/lang/String;)Ljava/lang/Error;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/baseTypeContext(I)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/booleanArrayLoad(Ljava/lang/Object;I)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/booleanArrayStore(Ljava/lang/Object;IZ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/booleanGetField(Ljava/lang/Object;PI)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/booleanPutField(Ljava/lang/Object;PZI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/byteArrayLoad(Ljava/lang/Object;I)B" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/byteArrayStore(Ljava/lang/Object;IB)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/byteGetField(Ljava/lang/Object;PI)B" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/bytePutField(Ljava/lang/Object;PBI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/charArrayLoad(Ljava/lang/Object;I)C" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/charArrayStore(Ljava/lang/Object;IC)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/charGetField(Ljava/lang/Object;PI)C" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/charPutField(Ljava/lang/Object;PCI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/checkHolder(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/checkInit(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/claimBuffer(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/claimOrReturnBuffer(IP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/copyToCStringBuf(PI[CI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/cstringLength(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/curHolder(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/describeExceptionImpl(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/doubleArrayLoad(Ljava/lang/Object;I)D" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/doubleArrayStore(Ljava/lang/Object;ID)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/doubleGetField(Ljava/lang/Object;PI)D" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/doublePutField(Ljava/lang/Object;PDI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/findKnownType(PLjava/lang/String;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmRuntime_boot()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmRuntime_initSystemClassLoaders()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmRuntime_notifyInitialized()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_GC_allocRawSlow(PIPPPIP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_GC_getNextDestructor(PLjava/lang/Object;Z)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_GC_markSlow(PLjava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Handle_get(P)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_JNI_lookup(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Log_getLevel()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Log_lock()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Log_lockedPrint(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Log_print(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Log_unlock()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_MethodRec_describe(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_MethodRec_flags(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_MethodRec_name(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_MethodRec_nparams(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_MethodRec_owner(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_MethodRec_param(PI)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_curHolder(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_inflate(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_lock_slow(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_notifyAll(PP)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_timedWait(PPJ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_unlock_slow(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_Monitor_wait(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ObjHeader_forObject(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ObjHeader_forObject(PLjava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ObjHeader_getMonitor(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ObjHeader_getMonitor(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ThreadState_getInterrupted(P)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ThreadState_id(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ThreadState_setInterrupted(PZ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ThreadState_tryClaimBuffer(PP)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ThreadState_tryGetBuffer(PI)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_ThreadState_tryReturnBuffer(PP)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeContext_findKnown(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_arrayElement(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_asClass(P)Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_checkInit(PP)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_elementSize(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_filename(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_flags(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_forObject(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_forObject(PLjava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_isArray(P)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_isInterface(P)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_isPrimitive(P)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_isSubtypeOf(PPP)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_isSubtypeOfFast(PPP)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_makeArray(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_name(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_parent(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_refSize(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_requiredAlignment(P)C" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_TypeData_size(P)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_abort(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_allocDestructorSlow(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_byteArrayLoad(PLjava/lang/Object;II)B" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_byteArrayStore(PLjava/lang/Object;IBI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_byteGetField(PLjava/lang/Object;PI)B" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_bytePutField(PLjava/lang/Object;PBI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_charArrayLoad(PLjava/lang/Object;II)C" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_charArrayStore(PLjava/lang/Object;ICI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_charGetField(PLjava/lang/Object;PI)C" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_charPutField(PLjava/lang/Object;PCI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_doubleArrayLoad(PLjava/lang/Object;II)D" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_doubleArrayStore(PLjava/lang/Object;IDI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_doubleGetField(PLjava/lang/Object;PI)D" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_doublePutField(PLjava/lang/Object;PDI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_floatArrayLoad(PLjava/lang/Object;II)F" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_floatArrayStore(PLjava/lang/Object;IFI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_floatGetField(PLjava/lang/Object;PI)F" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_floatPutField(PLjava/lang/Object;PFI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_free(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_homeDir(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_intArrayLoad(PLjava/lang/Object;II)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_intArrayStore(PLjava/lang/Object;III)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_intGetField(PLjava/lang/Object;PI)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_intPutField(PLjava/lang/Object;PII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_iterateDebugFrames_forJava(PPLcom/fiji/fivm/r1/fivmRuntime$DumpStackCback;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_locationToOffsetFromObj(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_locationToOffsetFromObj(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_longArrayLoad(PLjava/lang/Object;II)J" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_longArrayStore(PLjava/lang/Object;IJI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_longGetField(PLjava/lang/Object;PI)J" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_longPutField(PLjava/lang/Object;PJI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_malloc(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_objectArrayLoad(PLjava/lang/Object;II)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_objectArrayStore(PLjava/lang/Object;ILjava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_objectGetField(PLjava/lang/Object;PI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_objectGetStatic(PPI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_objectPutField(PLjava/lang/Object;PLjava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_objectPutStatic(PPLjava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_pointerArrayLoad(PLjava/lang/Object;II)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_pointerArrayStore(PLjava/lang/Object;IPI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_pointerGetField(PLjava/lang/Object;PI)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_pointerPutField(PLjava/lang/Object;PPI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_shortArrayLoad(PLjava/lang/Object;II)S" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_shortArrayStore(PLjava/lang/Object;ISI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_shortGetField(PLjava/lang/Object;PI)S" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_shortPutField(PLjava/lang/Object;PSI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fivmr_yield()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/floatArrayLoad(Ljava/lang/Object;I)F" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/floatArrayStore(Ljava/lang/Object;IF)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/floatGetField(Ljava/lang/Object;PI)F" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/floatPutField(Ljava/lang/Object;PFI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromCString(P)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromCString(PZ)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromCStringFull(P)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromCStringFull(PLjava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromCStringFullInHeap(P)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromCStringInHeap(P)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/fromUTF16Sequence(PI)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getBooleanElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getBooleanRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getBuffer(I)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getByteElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getByteRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getCString(Ljava/lang/String;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getCString(Ljava/lang/String;Z)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getCStringFull(Ljava/lang/String;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getCStringFullStack(Ljava/lang/String;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getCharElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getCharRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getDoubleElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getDoubleRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getFloatElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getFloatRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getIntElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getIntRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getLongElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getLongRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getMonitor(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getShortElements(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getShortRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getStringRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getStringUTFRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getTypeName(P)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/getUTF16Sequence(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/homeDir()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/initClassLoader(ILjava/lang/ClassLoader;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/intArrayLoad(Ljava/lang/Object;I)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/intArrayStore(Ljava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/intGetField(Ljava/lang/Object;PI)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/intPutField(Ljava/lang/Object;PII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/interrupted()Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/iterateDebugFrames(PLcom/fiji/fivm/r1/fivmRuntime$DumpStackCback;)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/javaExit(I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/linkContextToLoader(PLjava/lang/ClassLoader;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/log(Ljava/lang/Class;ILjava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/log(Ljava/lang/Object;ILjava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/logPrint(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/logPrintFull(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/logPrintImpl(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/longArrayLoad(Ljava/lang/Object;I)J" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/longArrayStore(Ljava/lang/Object;IJ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/longGetField(Ljava/lang/Object;PI)J" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/longPutField(Ljava/lang/Object;PJI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/makeJNIFuncName(PIPZ)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/methodRecToString(P)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/notifyAll(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/nullCheck(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/nullCheckAndArrayBoundsCheck(Ljava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/nullCheckArrayBoundsCheckAndArrayStoreCheck(Ljava/lang/Object;ILjava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/objectArrayLoad(Ljava/lang/Object;I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/objectArrayStore(Ljava/lang/Object;ILjava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/objectGetField(Ljava/lang/Object;PI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/objectGetStatic(PI)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/objectPutField(Ljava/lang/Object;PLjava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/objectPutStatic(PLjava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/pointerArrayLoad(Ljava/lang/Object;I)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/pointerArrayStore(Ljava/lang/Object;IP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/pointerGetField(Ljava/lang/Object;PI)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/pointerPutField(Ljava/lang/Object;PPI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/processArgs(IP)[Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/resolveNative(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnBooleanElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnBuffer(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnByteElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnCharElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnDoubleElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnFloatElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnIntElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnLongElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/returnShortElements(Ljava/lang/Object;PI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/runRunnable(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setArgumentProperties(Ljava/util/Properties;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setBooleanRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setByteRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setCharRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setDoubleRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setFloatRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setIntRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setLongRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setShortRegion(Ljava/lang/Object;IIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/setVMProperties(Ljava/util/Properties;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/shortArrayLoad(Ljava/lang/Object;I)S" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/shortArrayStore(Ljava/lang/Object;IS)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/shortGetField(Ljava/lang/Object;PI)S" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/shortPutField(Ljava/lang/Object;PSI)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/sleepAbsolute(J)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/stringLength(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwAbstractMethodError_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwArithmeticRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwArithmeticRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwArrayBoundsRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwArrayBoundsRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwArrayStoreRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwArrayStoreRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwClassCastRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwClassCastRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwClassChangeRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwClassChangeRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwCloneNotSupported()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwExceptionInInitializerError(Ljava/lang/Throwable;P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwExceptionInInitializerError_inJava(Ljava/lang/Object;P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwIllegalAssignmentError()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwIllegalAssignmentError_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwIllegalMonitorStateException_inJava(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwInternalError(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwLinkageError_inJava(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNegativeSizeRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNegativeSizeRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNoClassDefFoundError(Ljava/lang/String;Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNoClassDefFoundError_inJava(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNoClassDefFoundError_inNative(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNoSuchFieldError(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNoSuchMethodError(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNoSuchMethodError_inJava(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNullPointerRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwNullPointerRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwOutOfMemoryError_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwReflectiveException_inJava(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwStackOverflowRTE()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwStackOverflowRTE_inJava()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwUnsatisfiedLinkErrorForLoad(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwUnsatisfiedLinkErrorForMethodCall(P)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/throwUnsupportedOperationException()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/transcodeCStringToJNI(Ljava/lang/Appendable;PII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/wait(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/waitAbsolute(Ljava/lang/Object;J)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/fivmRuntime;/yield()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc$Fast;/bzero(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc$Fast;/memcpy(PPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc$Fast;/memmove(PPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc$Safe;/bzero(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc$Safe;/memcpy(PPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc$Safe;/memmove(PPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/EINTR()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/bzero(PP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/checkIO(I)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/checkIO(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/close(I)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/copyFromByteArray([BIIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/copyToByteArray([BIIP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/errno()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/getcwd()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/getcwd(PP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/getenv(Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/getenv(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/getenv(P)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/memcpy(PPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/memcpyOrMove(ZPPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/memcpyOrMoveSlowImpl(ZPPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/memmove(PPP)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/stderr_fd()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/stdin_fd()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/stdout_fd()I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/throwIOException()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/throwIOException(I)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/write(IPP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/r1/libc;/writeIgnoreEINTR(IPP)P" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/util/DisableEnableExit;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/fivm/util/DisableEnableExit;/getCanExit()Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/decodeCompletely(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/decodeCompletely(Ljava/nio/ByteBuffer;[C)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/decodeLoop(Ljava/nio/ByteBuffer;Ljava/nio/CharBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/decodedLength(Ljava/nio/ByteBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/decodedLengthLoop(Ljava/nio/ByteBuffer;[I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodeCompletely(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodeCompletely([CIILjava/nio/ByteBuffer;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodeCompletely([CII[BII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodedLength(Ljava/nio/CharBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodedLength([CII)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/encodedLengthLoop(Ljava/nio/CharBuffer;[I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/isContinuation(B)Z" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8;/throwInternalError()V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8String;/decode(Ljava/nio/ByteBuffer;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8String;/encodeCompletely(Ljava/lang/String;Ljava/nio/ByteBuffer;)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8String;/encodeCompletely(Ljava/lang/String;[BII)V" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8String;/encodedLength(Ljava/lang/String;)I" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8Support;/wrap([BII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Lcom/fiji/util/UTF8Support;/wrap([CII)Ljava/nio/CharBuffer;" = (
                "using full optimizing compiler"
            );
            "Ledu/purdue/scj/BackingStoreID;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ledu/purdue/scj/BackingStoreID;/BackingStoreID_create(Ljava/lang/String;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ledu/purdue/scj/VMSupport;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ledu/purdue/scj/VMSupport;/MemoryArea_getBSID(P)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/fivmr_OS_arch()P" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/fivmr_OS_name()P" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/fivmr_OS_version()P" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/fivmr_isBigEndian()Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/postInit(Ljava/util/Properties;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/preInit(Ljava/util/Properties;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/FCSystemProperties;/prePreInit()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/SystemProperties;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/SystemProperties;/getProperty(Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lgnu/classpath/SystemProperties;/getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/lang/CharData;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$Kind;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$Kind;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/<init>(Lgnu/java/nio/FCChannel;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/close()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/finalize()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/getNativeFD()I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/isValid()Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/setNativeFD(I)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel$State;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/close()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/getState()Lgnu/java/nio/FCChannel$State;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/getStderr()Lgnu/java/nio/FCChannel;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/getStdin()Lgnu/java/nio/FCChannel;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/getStdout()Lgnu/java/nio/FCChannel;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCChannel;/write(Ljava/nio/ByteBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/close(I)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/stderr_fd()I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/stdin_fd()I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/stdout_fd()I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/write(ILjava/nio/ByteBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FCNativeChannel;/writeImpl(ILjava/nio/ByteBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FileChannelImpl;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FileChannelImpl;/<init>(Lgnu/java/nio/FCChannel;I)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FileChannelImpl;/finalize()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FileChannelImpl;/implCloseChannel()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FileChannelImpl;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/FileChannelImpl;/write(Ljava/nio/ByteBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ByteEncodeLoopHelper;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ByteEncodeLoopHelper;/arrayEncodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ByteEncodeLoopHelper;/encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ByteEncodeLoopHelper;/normalEncodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1$Encoder$1;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1$Encoder$1;/isMappable(C)Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1$Encoder$1;/mapToByte(C)B" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1$Encoder;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1$Encoder;/<init>(Ljava/nio/charset/Charset;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1$Encoder;/encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/ISO_8859_1;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/Provider;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/Provider;/addCharset(Ljava/nio/charset/Charset;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/Provider;/charsetForName(Ljava/lang/String;)Ljava/nio/charset/Charset;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/Provider;/provider()Lgnu/java/nio/charset/Provider;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII$Encoder$1;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII$Encoder$1;/isMappable(C)Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII$Encoder$1;/mapToByte(C)B" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII$Encoder;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII$Encoder;/<init>(Ljava/nio/charset/Charset;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII$Encoder;/encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/US_ASCII;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16BE;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16BE;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16Encoder;/<init>(Ljava/nio/charset/Charset;IZ)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16Encoder;/encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16LE;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_16LE;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_8$Encoder;/<init>(Ljava/nio/charset/Charset;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_8$Encoder;/encodeLoop(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_8;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UTF_8;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UnicodeLittle;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/nio/charset/UnicodeLittle;/newEncoder()Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/<init>(Lgnu/java/util/WeakIdentityHashMap$WeakBucket;Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/getBucket()Lgnu/java/util/WeakIdentityHashMap$WeakBucket;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/getKey()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/getValue()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/setValue(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket;/<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakBucket;/getEntry()Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet$1;/<init>(Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet$1;/checkMod()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet$1;/findNext(Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;)Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet$1;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet$1;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet$1;/remove()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet;/<init>(Lgnu/java/util/WeakIdentityHashMap;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet;/access$0(Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet;)Lgnu/java/util/WeakIdentityHashMap;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap$WeakEntrySet;/size()I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/<init>(IF)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/cleanQueue()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/containsKey(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/entrySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/get(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/hash(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/internalAdd(Ljava/lang/Object;Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/internalGet(Ljava/lang/Object;)Lgnu/java/util/WeakIdentityHashMap$WeakBucket$WeakEntry;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/internalRemove(Lgnu/java/util/WeakIdentityHashMap$WeakBucket;)V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/keySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/rehash()V" = (
                "using full optimizing compiler"
            );
            "Lgnu/java/util/WeakIdentityHashMap;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/io/BufferedInputStream;/<init>(Ljava/io/InputStream;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/BufferedInputStream;/<init>(Ljava/io/InputStream;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/BufferedOutputStream;/<init>(Ljava/io/OutputStream;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/BufferedOutputStream;/<init>(Ljava/io/OutputStream;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/BufferedOutputStream;/flush()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/BufferedOutputStream;/write([BII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileDescriptor;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileDescriptor;/<init>(Ljava/nio/channels/ByteChannel;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileDescriptor;/valid()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileInputStream;/<init>(Ljava/io/FileDescriptor;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileInputStream;/finalize()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileOutputStream;/<init>(Ljava/io/FileDescriptor;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileOutputStream;/finalize()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FileOutputStream;/write([BII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FilterInputStream;/<init>(Ljava/io/InputStream;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/FilterOutputStream;/<init>(Ljava/io/OutputStream;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/IOException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/IOException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/InputStream;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/OutputStream;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/OutputStream;/flush()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/<init>(Ljava/io/OutputStream;Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/flush()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/print(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/print(Ljava/lang/String;Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/println(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/println(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/println(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/setError()V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/write([BII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/writeChars(Ljava/lang/String;II)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/PrintStream;/writeChars([CII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/io/UnsupportedEncodingException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/AbstractMethodError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ArithmeticException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ArrayIndexOutOfBoundsException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ArrayIndexOutOfBoundsException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ArrayStoreException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ArrayStoreException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/AssertionError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/AssertionError;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/AssertionError;/<init>(J)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/<init>(Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/booleanValue()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/compareTo(Ljava/lang/Boolean;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Boolean;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Character;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Character;/readCodePoint(I)C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Character;/toLowerCase(C)C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Character;/toUpperCase(C)C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/desiredAssertionStatus()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/getComponentType()Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/getName()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/getSuperclass()Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/isInterface()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/isPrimitive()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Class;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ClassCastException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ClassLoader;/<init>(Ljava/lang/ClassLoader;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/CloneNotSupportedException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Double;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Double;/longBitsToDouble(J)D" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/<init>(Ljava/lang/String;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/compareTo(Ljava/lang/Enum;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/finalize()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/getDeclaringClass()Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Enum;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Error;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Error;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Error;/<init>(Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Exception;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Exception;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Exception;/<init>(Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ExceptionInInitializerError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ExceptionInInitializerError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ExceptionInInitializerError;/getCause()Ljava/lang/Throwable;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClass;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClass;/getComponentType(Ljava/lang/Class;)Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClass;/getName(Ljava/lang/Class;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClass;/getSuperclass(Ljava/lang/Class;)Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClass;/isInterface(Ljava/lang/Class;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClass;/isPrimitive(Ljava/lang/Class;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClassLoader;/defaultAssertionStatus()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCClassLoader;/getPrimitiveClass(C)Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCDouble;/longBitsToDouble(J)D" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCFloat;/floatToRawIntBits(F)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCMath;/floor(D)D" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCObject;/clone(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCObject;/fivmr_TypeData_asClass(P)Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCObject;/getClass(Ljava/lang/Object;)Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCObject;/notifyAll(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/enableShutdownHooks()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/exit(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/fivmr_JNI_libPrefix()P" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/fivmr_JNI_libSuffix()P" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/fivmr_VM_exit(PI)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCRuntime;/runFinalizationForExit()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCSystem;/arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCSystem;/identityHashCode(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCSystem;/makeStandardErrorStream()Ljava/io/PrintStream;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCSystem;/makeStandardInputStream()Ljava/io/InputStream;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCSystem;/makeStandardOutputStream()Ljava/io/PrintStream;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCThrowable$1;/<init>(Ljava/lang/FCThrowable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCThrowable$1;/cback(PI)P" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCThrowable$CompactElement;/<init>(PILjava/lang/FCThrowable$CompactElement;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCThrowable;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCThrowable;/fillInStackTrace(Ljava/lang/Throwable;)Ljava/lang/FCThrowable;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/FCThrowable;/getStackTrace(Ljava/lang/Throwable;)[Ljava/lang/StackTraceElement;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Float;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Float;/floatToIntBits(F)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Float;/floatToRawIntBits(F)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Float;/isNaN(F)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Float;/toString(F)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalArgumentException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalArgumentException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalMonitorStateException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalMonitorStateException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalStateException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalStateException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalThreadStateException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IllegalThreadStateException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IncompatibleClassChangeError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IncompatibleClassChangeError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IndexOutOfBoundsException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/IndexOutOfBoundsException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/InheritableThreadLocal;/newChildThread(Ljava/lang/Thread;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer$IntegerCache;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/access$1()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/compareTo(Ljava/lang/Integer;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/getChars(II[C)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/intValue()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/stringSize(I)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/toHexString(I)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/toOctalString(I)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/toString(I)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/toString(II)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/toUnsignedString(II)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Integer;/valueOf(I)Ljava/lang/Integer;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/InternalError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/InternalError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/InterruptedException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/LinkageError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/LinkageError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Long;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Long;/getChars(JI[C)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Long;/stringSize(J)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Long;/toString(J)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Long;/toString(JI)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Math;/abs(I)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Math;/floor(D)D" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Math;/max(II)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Math;/min(II)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/NegativeArraySizeException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/NoClassDefFoundError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/NoClassDefFoundError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/NoSuchFieldError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/NoSuchMethodError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/NullPointerException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Number;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/clone()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/finalize()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/getClass()Ljava/lang/Class;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/notifyAll()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Object;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/OutOfMemoryError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/OutOfMemoryError;/fillInStackTrace()Ljava/lang/Throwable;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/addShutdownHook(Ljava/lang/Thread;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/exit(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/getRuntime()Ljava/lang/Runtime;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/halt(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Runtime;/runShutdownHooks()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/RuntimeException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/RuntimeException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/RuntimeException;/<init>(Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/SecurityException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackOverflowError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackTraceElement;/<init>(Ljava/lang/String;ILjava/lang/String;Ljava/lang/String;Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackTraceElement;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackTraceElement;/equals(Ljava/lang/Object;Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackTraceElement;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackTraceElement;/hashCode(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StackTraceElement;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String$CaseInsensitiveComparator;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<init>(II[C)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<init>(Ljava/lang/StringBuffer;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<init>(Ljava/lang/StringBuilder;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<init>([C)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<init>([CII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/<init>([CIIZ)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/charAt(I)C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/compareTo(Ljava/lang/String;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/compareToIgnoreCase(Ljava/lang/String;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/endsWith(Ljava/lang/String;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/equalsIgnoreCase(Ljava/lang/String;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/equalsSlow(Ljava/lang/String;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/getBytes()[B" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/getBytes(Ljava/lang/String;)[B" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/getChars(II[CI)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/indexOf(I)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/indexOf(II)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/length()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/regionMatches(ZILjava/lang/String;II)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/replace(CC)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/substring(I)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/substring(II)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/toCharArray()[C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/toLowerCase()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/valueOf(I)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/valueOf(Ljava/lang/Object;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/String;/zeroBasedStringValue(Ljava/lang/String;)[C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/append(C)Ljava/lang/StringBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/append(I)Ljava/lang/StringBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/append(Ljava/lang/String;)Ljava/lang/StringBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/append([CII)Ljava/lang/StringBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/enlarge_unsynchronized(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/ensureCapacity_unsynchronized(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuffer;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/append(C)Ljava/lang/StringBuilder;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/append(F)Ljava/lang/StringBuilder;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/append(I)Ljava/lang/StringBuilder;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/append(J)Ljava/lang/StringBuilder;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/append(Ljava/lang/Object;)Ljava/lang/StringBuilder;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/append(Ljava/lang/String;)Ljava/lang/StringBuilder;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/enlarge(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/ensureCapacity(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringBuilder;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringIndexOutOfBoundsException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/StringIndexOutOfBoundsException;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/System;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/System;/arraycopy(Ljava/lang/Object;ILjava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/System;/exit(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/System;/getProperty(Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/System;/identityHashCode(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/<init>(Ljava/lang/ThreadGroup;Ljava/lang/Runnable;Ljava/lang/String;J)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/<init>(Ljava/lang/VMThread;Ljava/lang/String;IZ)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/checkAccess()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/createAnonymousThreadName()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/currentThread()Ljava/lang/Thread;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/die()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/getDefaultUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/getThreadGroup()Ljava/lang/ThreadGroup;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/getThreadLocals()Ljava/util/Map;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/getUncaughtExceptionHandler()Ljava/lang/Thread$UncaughtExceptionHandler;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/interrupt()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/isAlive()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/join()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/join(JI)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/run()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/setDaemon(Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/sleep(J)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/sleep(JI)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/start()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Thread;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/addThread(Ljava/lang/Thread;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/getName()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/removeThread(Ljava/lang/Thread;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadGroup;/uncaughtException(Ljava/lang/Thread;Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadLocal;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadLocal;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ThreadLocal;/get()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable$StaticData;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/<init>(Ljava/lang/String;Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/<init>(Ljava/lang/Throwable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/fillInStackTrace()Ljava/lang/Throwable;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/getCause()Ljava/lang/Throwable;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/getLocalizedMessage()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/getMessage()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/getStackTrace()[Ljava/lang/StackTraceElement;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/initCause(Ljava/lang/Throwable;)Ljava/lang/Throwable;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/printStackTrace()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/printStackTrace(Ljava/io/PrintStream;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/stackTraceString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/stackTraceStringBuffer(Ljava/lang/StringBuilder;Ljava/lang/String;[Ljava/lang/StackTraceElement;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/Throwable;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/UnsatisfiedLinkError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/UnsupportedOperationException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/<init>(Ljava/lang/Thread;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_create(IZ)Ljava/lang/VMThread;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_createRT(IZ)Ljava/lang/VMThread;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_die()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_getPriority()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_getThreadState()P" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_isDaemon()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_run()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_setThreadState(P)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_setUncaughtException(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/VMThread_starting()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/allocBackingStore()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/create(Ljava/lang/Thread;J)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/currentThread()Ljava/lang/Thread;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/fivmr_ThreadState_javaThreadObject(P)Ljava/lang/VMThread;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/fivmr_VMThread_start(PLjava/lang/VMThread;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/getPriority()I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/interrupt()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/isDaemon()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/join(JI)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/sleep(JI)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VMThread;/yield()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VirtualMachineError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/VirtualMachineError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/String_getArrayPointer(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/String_getOffset(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/charAt(Ljava/lang/String;I)C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/finalize(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/getArray(Ljava/lang/String;)[C" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/getLength(Ljava/lang/String;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/getOffset(Ljava/lang/String;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/setClassLoaderData(Ljava/lang/ClassLoader;P)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/threadForVMThread(Ljava/lang/Object;)Ljava/lang/Thread;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/typeDataFromClass(Ljava/lang/Class;)P" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/fivmSupport;/wrap([CII)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/Reference;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/Reference;/<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/Reference;/get()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/ReferenceQueue;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/ReferenceQueue;/dequeue()Ljava/lang/ref/Reference;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/ReferenceQueue;/poll()Ljava/lang/ref/Reference;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/ref/WeakReference;/<init>(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/reflect/Array;/newInstance(Ljava/lang/Class;I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/lang/reflect/FCArray;/createObjectArray(Ljava/lang/Class;I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/<init>(IIII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/capacity()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/checkArraySize(III)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/checkForOverflow(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/checkForUnderflow(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/checkIfReadOnly()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/checkIndex(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/contiguous()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/flip()Ljava/nio/Buffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/hasRemaining()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/limit()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/limit(I)Ljava/nio/Buffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/position()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/position(I)Ljava/nio/Buffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/Buffer;/remaining()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/BufferOverflowException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/BufferUnderflowException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/<init>(IIII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/allocate(I)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/array()[B" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/arrayOffset()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/compareTo(Ljava/nio/ByteBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/get([B)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/getHelper()B" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/getHelper(I)B" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/getHelper([BII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/hasArray()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/order()Ljava/nio/ByteOrder;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/order(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/put([B)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/putHelper(B)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/putHelper(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/putHelper([BII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/sliceHelper()Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/wrap([B)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBuffer;/wrap([BII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferHelper;/putChar(Ljava/nio/ByteBuffer;CLjava/nio/ByteOrder;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferHelper;/putShort(Ljava/nio/ByteBuffer;SLjava/nio/ByteOrder;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/<init>([BfIIIIIZ)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/get()B" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/get(I)B" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/get([BII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/isReadOnly()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/isVMBuffer()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/put(B)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/put(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/put([BII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/putChar(C)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteBufferImpl;/slice()Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteOrder;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteOrder;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ByteOrder;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/<init>(IIII)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/array()[C" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/arrayOffset()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/compareTo(Ljava/nio/CharBuffer;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/hasArray()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/length()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBuffer;/wrap([CII)Ljava/nio/CharBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBufferImpl;/<init>([CIIIIIZ)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBufferImpl;/get()C" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBufferImpl;/get(I)C" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBufferImpl;/get([CII)Ljava/nio/CharBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBufferImpl;/isReadOnly()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/CharBufferImpl;/put(C)Ljava/nio/CharBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/ReadOnlyBufferException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/channels/FileChannel;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/channels/spi/AbstractInterruptibleChannel;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/channels/spi/AbstractInterruptibleChannel;/close()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/channels/spi/AbstractInterruptibleChannel;/isOpen()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharacterCodingException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/<init>(Ljava/lang/String;[Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/aliases()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/charsetForName(Ljava/lang/String;)Ljava/nio/charset/Charset;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/checkName(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/compareTo(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/compareTo(Ljava/nio/charset/Charset;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/forName(Ljava/lang/String;)Ljava/nio/charset/Charset;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/name()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/provider()Ljava/nio/charset/spi/CharsetProvider;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/Charset;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/<init>(Ljava/nio/charset/Charset;FF)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/<init>(Ljava/nio/charset/Charset;FF[B)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/encode(Ljava/nio/CharBuffer;)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/encode(Ljava/nio/CharBuffer;Ljava/nio/ByteBuffer;Z)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/flush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/implFlush(Ljava/nio/ByteBuffer;)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/implOnMalformedInput(Ljava/nio/charset/CodingErrorAction;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/implOnUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/implReplaceWith([B)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/maxBytesPerChar()F" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/onMalformedInput(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CharsetEncoder;/onUnmappableCharacter(Ljava/nio/charset/CodingErrorAction;)Ljava/nio/charset/CharsetEncoder;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderMalfunctionError;/<init>(Ljava/lang/Exception;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderMalfunctionError;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$1;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$1;/make(I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$2;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$2;/make(I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$Cache;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$Cache;/get(I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult$Cache;/getLazy(I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/<init>(II)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/isError()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/isMalformed()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/isOverflow()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/isUnderflow()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/length()I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/malformedForLength(I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/throwException()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CoderResult;/unmappableForLength(I)Ljava/nio/charset/CoderResult;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CodingErrorAction;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CodingErrorAction;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/CodingErrorAction;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/IllegalCharsetNameException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/MalformedInputException;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/MalformedInputException;/getMessage()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/UnmappableCharacterException;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/UnmappableCharacterException;/getMessage()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/UnsupportedCharsetException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/charset/spi/CharsetProvider;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$MakeVMBufferMode;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$MakeVMBufferMode;/<init>(Ljava/lang/String;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$ReadWriteMode$1;/<init>(Ljava/lang/String;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$ReadWriteMode$2;/<init>(Ljava/lang/String;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$ReadWriteMode;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$ReadWriteMode;/<init>(Ljava/lang/String;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$ReadWriteMode;/<init>(Ljava/lang/String;ILjava/nio/fivmSupport$ReadWriteMode;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport$ReadWriteMode;/canRead()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/DirectByteBuffer_address(Ljava/lang/Object;)P" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/DirectByteBuffer_capacity(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/DirectByteBuffer_wrap(PIII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/address(Ljava/nio/ByteBuffer;)P" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/makeVMBuffer(Ljava/nio/ByteBuffer;Ljava/nio/fivmSupport$MakeVMBufferMode;Ljava/nio/fivmSupport$ReadWriteMode;)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/makeVMBufferImpl(Ljava/nio/ByteBuffer;Ljava/nio/fivmSupport$MakeVMBufferMode;Ljava/nio/fivmSupport$ReadWriteMode;)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/positionAddress(Ljava/nio/ByteBuffer;)P" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/positionAddress(Ljava/nio/ByteBuffer;I)P" = (
                "using full optimizing compiler"
            );
            "Ljava/nio/fivmSupport;/wrap(PIII)Ljava/nio/ByteBuffer;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/addAll(Ljava/util/Collection;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/containsAll(Ljava/util/Collection;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/equals(Ljava/lang/Object;Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/hashCode(Ljava/lang/Object;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/toArray([Ljava/lang/Object;)[Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractCollection;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$1;/<init>(Ljava/util/AbstractList;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$1;/checkMod()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$1;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$1;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$1;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$2;/<init>(Ljava/util/AbstractList;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$2;/checkMod()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$2;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$2;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$2;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList$2;/set(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/listIterator()Ljava/util/ListIterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/listIterator(I)Ljava/util/ListIterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/remove(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractList;/set(ILjava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1$1;/<init>(Ljava/util/AbstractMap$1;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1$1;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1$1;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1$1;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1;/<init>(Ljava/util/AbstractMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1;/access$0(Ljava/util/AbstractMap$1;)Ljava/util/AbstractMap;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap$1;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap;/keySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractMap;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractSequentialList;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractSequentialList;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractSet;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractSet;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/AbstractSet;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/<init>(Ljava/util/Collection;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/add(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/addAll(ILjava/util/Collection;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/addAll(Ljava/util/Collection;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/checkBoundExclusive(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/checkBoundInclusive(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/ensureCapacity(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/get(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/remove(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/set(ILjava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/throwIOOBE(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ArrayList;/toArray()[Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Arrays;/mergeSort([Ljava/lang/Object;[Ljava/lang/Object;III)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Arrays;/mergeSort([Ljava/lang/Object;[Ljava/lang/Object;IIILjava/util/Comparator;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Arrays;/sort([Ljava/lang/Object;Ljava/util/Comparator;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Arrays;/swap([Ljava/lang/Object;II)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyIterator;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyIterator;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyIterator;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyIterator;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyIterator;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/<init>(Ljava/util/Collections$EmptyList;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/get(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyList;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/<init>(Ljava/util/Collections$EmptyMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/containsKey(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/entrySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/get(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptyMap;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/<init>(Ljava/util/Collections$EmptySet;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/containsAll(Ljava/util/Collection;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$EmptySet;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection$1;/<init>(Ljava/util/Collections$UnmodifiableCollection;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection$1;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection$1;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection$1;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection;/<init>(Ljava/util/Collection;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableCollection;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableSet;/<init>(Ljava/util/Set;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableSet;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections$UnmodifiableSet;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections;/emptyIterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections;/emptySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections;/sort(Ljava/util/List;Ljava/util/Comparator;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Collections;/unmodifiableSet(Ljava/util/Set;)Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ConcurrentModificationException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/ConcurrentModificationException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Dictionary;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/HashMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/getKey()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/getValue()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/recordAccess(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/recordRemoval(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$Entry;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntryIterator;/<init>(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntryIterator;/<init>(Ljava/util/HashMap;Ljava/util/HashMap$EntryIterator;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntryIterator;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntryIterator;/next()Ljava/util/Map$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntrySet;/<init>(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntrySet;/<init>(Ljava/util/HashMap;Ljava/util/HashMap$EntrySet;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntrySet;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntrySet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$EntrySet;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$HashIterator;/<init>(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$HashIterator;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$HashIterator;/nextEntry()Ljava/util/HashMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$HashIterator;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeyIterator;/<init>(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeyIterator;/<init>(Ljava/util/HashMap;Ljava/util/HashMap$KeyIterator;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeyIterator;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeySet;/<init>(Ljava/util/HashMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeySet;/<init>(Ljava/util/HashMap;Ljava/util/HashMap$KeySet;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeySet;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeySet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap$KeySet;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/<init>(IF)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/addEntry(ILjava/lang/Object;Ljava/lang/Object;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/containsKey(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/entrySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/entrySet0()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/get(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/getEntry(Ljava/lang/Object;)Ljava/util/HashMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/getForNullKey()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/hash(I)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/indexFor(II)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/init()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/keySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/newEntryIterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/newKeyIterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/putForNullKey(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/remove(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/removeEntryForKey(Ljava/lang/Object;)Ljava/util/HashMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/resize(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashMap;/transfer([Ljava/util/HashMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/<init>(Ljava/util/Collection;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/add(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/remove(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/HashSet;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/<init>(ILjava/lang/Object;Ljava/lang/Object;Ljava/util/Hashtable$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/clone()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/getKey()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/getValue()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Entry;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$EntrySet;/<init>(Ljava/util/Hashtable;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$EntrySet;/<init>(Ljava/util/Hashtable;Ljava/util/Hashtable$EntrySet;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$EntrySet;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$EntrySet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$EntrySet;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Enumerator;/<init>(Ljava/util/Hashtable;IZ)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Enumerator;/hasMoreElements()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Enumerator;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Enumerator;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Enumerator;/nextElement()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable$Enumerator;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/<init>(IF)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/access$0(Ljava/util/Hashtable;I)Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/access$1(Ljava/util/Hashtable;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/access$2(Ljava/util/Hashtable;)[Ljava/util/Hashtable$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/access$3(Ljava/util/Hashtable;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/access$4(Ljava/util/Hashtable;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/access$5(Ljava/util/Hashtable;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/clone()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/containsKey(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/entrySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/get(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/getIterator(I)Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/rehash()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Hashtable;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$Entry;/<init>(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$LinkedListItr;/<init>(Ljava/util/LinkedList;I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$LinkedListItr;/checkMod()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$LinkedListItr;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$LinkedListItr;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$LinkedListItr;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList$LinkedListItr;/set(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/addFirst(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/checkBoundsExclusive(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/checkBoundsInclusive(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/get(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/getEntry(I)Ljava/util/LinkedList$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/getFirst()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/listIterator(I)Ljava/util/ListIterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/remove(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/removeEntry(Ljava/util/LinkedList$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/removeFirst()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/set(ILjava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/LinkedList;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/NoSuchElementException;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/NoSuchElementException;/<init>(Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Properties;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Properties;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Properties;/getProperty(Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Properties;/getProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Properties;/setProperty(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/StringTokenizer;/<init>(Ljava/lang/String;Ljava/lang/String;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/StringTokenizer;/<init>(Ljava/lang/String;Ljava/lang/String;Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/StringTokenizer;/countTokens()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/StringTokenizer;/hasMoreTokens()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/StringTokenizer;/nextToken()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/<init>(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/getKey()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/getValue()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/setValue(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$Entry;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntryIterator;/<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntryIterator;/next()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntryIterator;/next()Ljava/util/Map$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntrySet;/<init>(Ljava/util/TreeMap;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntrySet;/contains(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntrySet;/iterator()Ljava/util/Iterator;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$EntrySet;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$PrivateEntryIterator;/<init>(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$PrivateEntryIterator;/hasNext()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$PrivateEntryIterator;/nextEntry()Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap$PrivateEntryIterator;/remove()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/access$0(Ljava/util/TreeMap;Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/access$1(Ljava/util/TreeMap;)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/colorOf(Ljava/util/TreeMap$Entry;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/containsKey(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/deleteEntry(Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/entrySet()Ljava/util/Set;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/fixAfterDeletion(Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/fixAfterInsertion(Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/get(Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/getEntry(Ljava/lang/Object;)Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/getFirstEntry()Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/leftOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/parentOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/put(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/rightOf(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/rotateLeft(Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/rotateRight(Ljava/util/TreeMap$Entry;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/setColor(Ljava/util/TreeMap$Entry;Z)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/successor(Ljava/util/TreeMap$Entry;)Ljava/util/TreeMap$Entry;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/TreeMap;/valEquals(Ljava/lang/Object;Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/<init>(II)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/add(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/addElement(Ljava/lang/Object;)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/checkBoundExclusive(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/checkBoundExclusiveSlow(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/elementAt(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/ensureCapacityNoSync(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/ensureCapacitySlow(I)V" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/equals(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/get(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/hashCode()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/indexOf(Ljava/lang/Object;I)I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/isEmpty()Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/remove(I)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/remove(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/removeElement(Ljava/lang/Object;)Z" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/set(ILjava/lang/Object;)Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/size()I" = (
                "using full optimizing compiler"
            );
            "Ljava/util/Vector;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Ljavax/realtime/IllegalAssignmentError;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/<init>(I)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/<init>(J)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/<init>(Lsun/misc/FDBigInt;)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/<init>([II)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/add(Lsun/misc/FDBigInt;)Lsun/misc/FDBigInt;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/cmp(Lsun/misc/FDBigInt;)I" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/lshiftMe(I)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/mult(I)Lsun/misc/FDBigInt;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/mult(Lsun/misc/FDBigInt;)Lsun/misc/FDBigInt;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/normalizeMe()I" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/quoRemIteration(Lsun/misc/FDBigInt;)I" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FDBigInt;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal$1;/<init>()V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal$1;/initialValue()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal$1;/initialValue()[C" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/<init>(F)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/big5pow(I)Lsun/misc/FDBigInt;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/constructPow52(II)Lsun/misc/FDBigInt;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/countBits(J)I" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/developLongDigits(IJJ)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/dtoa(IJI)V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/getChars([C)I" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/multPow52(Lsun/misc/FDBigInt;II)Lsun/misc/FDBigInt;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/roundup()V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/toJavaFormatString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/FloatingDecimal;/toString()Ljava/lang/String;" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/VM;/<clinit>()V" = (
                "using full optimizing compiler"
            );
            "Lsun/misc/VM;/booted()V" = (
                "using full optimizing compiler"
            );
            "P/add(I)P" = ( "using full optimizing compiler" );
            "P/div(I)P" = ( "using full optimizing compiler" );
            "P/fromInt(I)P" = ( "using full optimizing compiler" );
            "P/greaterThan(I)Z" = (
                "using full optimizing compiler"
            );
            "P/greaterThan(P)Z" = (
                "using full optimizing compiler"
            );
            "P/greaterThanOrEqual(P)Z" = (
                "using full optimizing compiler"
            );
            "P/lessThan(I)Z" = ( "using full optimizing compiler" );
            "P/mul(I)P" = ( "using full optimizing compiler" );
            "P/signedLessThan(I)Z" = (
                "using full optimizing compiler"
            );
            "P/sub(I)P" = ( "using full optimizing compiler" );
            "[B/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[C/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[D/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[F/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[I/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[J/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[Ljava/lang/Object;/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[P/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[S/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/MM;/allocArrayForNative(IPI)Ljava/lang/Object;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/MM;/allocForNative(IP)Ljava/lang/Object;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/MemoryAreas;/MemoryArea_doRun(PLjava/lang/Runnable;)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime$DumpStackCback;/DumpStackCback_cback(PI)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/cstringLength(Ljava/lang/Object;)I]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/describeExceptionImpl(Ljava/lang/Object;)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/fivmRuntime_boot()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/fivmRuntime_initSystemClassLoaders()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/fivmRuntime_notifyInitialized()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/fromCStringFullInHeap(P)Ljava/lang/String;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/fromCStringInHeap(P)Ljava/lang/String;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/fromUTF16Sequence(PI)Ljava/lang/String;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getBooleanElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getBooleanRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getByteElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getByteRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getCString(Ljava/lang/String;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getCStringFull(Ljava/lang/String;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getCharElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getCharRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getDoubleElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getDoubleRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getFloatElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getFloatRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getIntElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getIntRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getLongElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getLongRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getShortElements(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getShortRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getStringRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getStringUTFRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/getUTF16Sequence(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/javaExit(I)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/makeJNIFuncName(PIPZ)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/processArgs(IP)[Ljava/lang/String;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnBooleanElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnBuffer(P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnByteElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnCharElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnDoubleElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnFloatElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnIntElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnLongElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/returnShortElements(Ljava/lang/Object;PI)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/runRunnable(Ljava/lang/Object;)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setBooleanRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setByteRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setCharRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setDoubleRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setFloatRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setIntRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setLongRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/setShortRegion(Ljava/lang/Object;IIP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/stringLength(Ljava/lang/Object;)I]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwAbstractMethodError_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwArithmeticRTE()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwArithmeticRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwArrayBoundsRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwArrayStoreRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwClassCastRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwClassChangeRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwExceptionInInitializerError_inJava(Ljava/lang/Object;P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwIllegalAssignmentError()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwIllegalAssignmentError_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwIllegalMonitorStateException_inJava(P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwInternalError(P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwLinkageError_inJava(P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNegativeSizeRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNoClassDefFoundError_inJava(PP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNoClassDefFoundError_inNative(PP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNoSuchFieldError(PP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNoSuchMethodError(PP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNoSuchMethodError_inJava(P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNullPointerRTE()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwNullPointerRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwOutOfMemoryError_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwReflectiveException_inJava(Ljava/lang/Object;)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwStackOverflowRTE()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwStackOverflowRTE_inJava()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Lcom/fiji/fivm/r1/fivmRuntime;/throwUnsatisfiedLinkErrorForLoad(PP)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ledu/purdue/scj/BackingStoreID;/BackingStoreID_create(Ljava/lang/String;)Ljava/lang/Object;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ledu/purdue/scj/VMSupport;/MemoryArea_getBSID(P)Ljava/lang/Object;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_create(IZ)Ljava/lang/VMThread;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_createRT(IZ)Ljava/lang/VMThread;]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_die()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_getPriority()I]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_getThreadState()P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_isDaemon()Z]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_run()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_setThreadState(P)V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_setUncaughtException(Ljava/lang/Object;)Z]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/VMThread;/VMThread_starting()V]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/fivmSupport;/String_getArrayPointer(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/lang/fivmSupport;/String_getOffset(Ljava/lang/Object;)I]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/nio/fivmSupport;/DirectByteBuffer_address(Ljava/lang/Object;)P]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/nio/fivmSupport;/DirectByteBuffer_capacity(Ljava/lang/Object;)I]" = (
                "using full optimizing compiler"
            );
            "[Synthetic \'export\', origin = Ljava/nio/fivmSupport;/DirectByteBuffer_wrap(PIII)Ljava/nio/ByteBuffer;]" = (
                "using full optimizing compiler"
            );
            "[Z/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
            "[f/fiji_cloneHelper()Ljava/lang/Object;" = (
                "using full optimizing compiler"
            );
        };
        VERIFIABLE = ();
    };
}